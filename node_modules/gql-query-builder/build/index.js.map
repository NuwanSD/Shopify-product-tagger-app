{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,uCAAkC;AAoFhC,mBApFK,kBAAQ,CAoFL;AAnFV,4EAAuE;AACvE,sEAAiE;AACjE,oFAA+E;AAM/E,SAAS,cAAc,CACrB,OAAsD,EACtD,OAAa,EACb,MAAY;IAEZ,IAAI,cAA6B,CAAC;IAClC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,IAAI,OAAO,EAAE;YACX,IAAM,aAAa,GAAkB,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAClE,OAAO,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SAC9C;QACD,cAAc,GAAG,IAAI,6BAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1D,OAAO,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KAC/C;IACD,IAAI,OAAO,EAAE;QACX,IAAM,aAAa,GAAkB,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClE,OAAO,aAAa,CAAC,YAAY,EAAE,CAAC;KACrC;IACD,cAAc,GAAG,IAAI,6BAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1D,OAAO,cAAc,CAAC,YAAY,EAAE,CAAC;AACvC,CAAC;AAsDmB,+BAAK;AApDzB,SAAS,iBAAiB,CACxB,OAAsD,EACtD,OAA0B,EAC1B,MAAY;IAEZ,IAAI,aAA+B,CAAC;IACpC,IAAI,cAAgC,CAAC;IACrC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,IAAI,OAAO,EAAE;YACX,aAAa;YACb,aAAa,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC7C,OAAO,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;SAChD;QACD,cAAc,GAAG,IAAI,gCAAsB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC7D,OAAO,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KACjD;IACD,IAAI,OAAO,EAAE;QACX,aAAa;QACb,aAAa,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC7C,OAAO,aAAa,CAAC,eAAe,EAAE,CAAC;KACxC;IACD,cAAc,GAAG,IAAI,gCAAsB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC7D,OAAO,cAAc,CAAC,eAAe,EAAE,CAAC;AAC1C,CAAC;AA4BsB,qCAAQ;AA1B/B,SAAS,qBAAqB,CAC5B,OAAsD,EACtD,OAA8B;IAE9B,IAAI,aAAmC,CAAC;IACxC,IAAI,cAAoC,CAAC;IACzC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,IAAI,OAAO,EAAE;YACX,aAAa;YACb,aAAa,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,aAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;SACpD;QACD,cAAc,GAAG,IAAI,oCAA0B,CAAC,OAAO,CAAC,CAAC;QACzD,OAAO,cAAc,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;KACrD;IACD,IAAI,OAAO,EAAE;QACX,aAAa;QACb,aAAa,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,aAAa,CAAC,mBAAmB,EAAE,CAAC;KAC5C;IACD,cAAc,GAAG,IAAI,oCAA0B,CAAC,OAAO,CAAC,CAAC;IACzD,OAAO,cAAc,CAAC,mBAAmB,EAAE,CAAC;AAC9C,CAAC;AAG0B,6CAAY","sourcesContent":["import adapters from \"./adapters\";\nimport DefaultMutationAdapter from \"./adapters/DefaultMutationAdapter\";\nimport DefaultQueryAdapter from \"./adapters/DefaultQueryAdapter\";\nimport DefaultSubscriptionAdapter from \"./adapters/DefaultSubscriptionAdapter\";\nimport IMutationAdapter from \"./adapters/IMutationAdapter\";\nimport IQueryAdapter from \"./adapters/IQueryAdapter\";\nimport ISubscriptionAdapter from \"./adapters/ISubscriptionAdapter\";\nimport IQueryBuilderOptions from \"./IQueryBuilderOptions\";\n\nfunction queryOperation(\n  options: IQueryBuilderOptions | IQueryBuilderOptions[],\n  adapter?: any,\n  config?: any\n) {\n  let defaultAdapter: IQueryAdapter;\n  if (Array.isArray(options)) {\n    if (adapter) {\n      const customAdapter: IQueryAdapter = new adapter(options, config);\n      return customAdapter.queriesBuilder(options);\n    }\n    defaultAdapter = new DefaultQueryAdapter(options, config);\n    return defaultAdapter.queriesBuilder(options);\n  }\n  if (adapter) {\n    const customAdapter: IQueryAdapter = new adapter(options, config);\n    return customAdapter.queryBuilder();\n  }\n  defaultAdapter = new DefaultQueryAdapter(options, config);\n  return defaultAdapter.queryBuilder();\n}\n\nfunction mutationOperation(\n  options: IQueryBuilderOptions | IQueryBuilderOptions[],\n  adapter?: IMutationAdapter,\n  config?: any\n) {\n  let customAdapter: IMutationAdapter;\n  let defaultAdapter: IMutationAdapter;\n  if (Array.isArray(options)) {\n    if (adapter) {\n      // @ts-ignore\n      customAdapter = new adapter(options, config);\n      return customAdapter.mutationsBuilder(options);\n    }\n    defaultAdapter = new DefaultMutationAdapter(options, config);\n    return defaultAdapter.mutationsBuilder(options);\n  }\n  if (adapter) {\n    // @ts-ignore\n    customAdapter = new adapter(options, config);\n    return customAdapter.mutationBuilder();\n  }\n  defaultAdapter = new DefaultMutationAdapter(options, config);\n  return defaultAdapter.mutationBuilder();\n}\n\nfunction subscriptionOperation(\n  options: IQueryBuilderOptions | IQueryBuilderOptions[],\n  adapter?: ISubscriptionAdapter\n) {\n  let customAdapter: ISubscriptionAdapter;\n  let defaultAdapter: ISubscriptionAdapter;\n  if (Array.isArray(options)) {\n    if (adapter) {\n      // @ts-ignore\n      customAdapter = new adapter(options);\n      return customAdapter.subscriptionsBuilder(options);\n    }\n    defaultAdapter = new DefaultSubscriptionAdapter(options);\n    return defaultAdapter.subscriptionsBuilder(options);\n  }\n  if (adapter) {\n    // @ts-ignore\n    customAdapter = new adapter(options);\n    return customAdapter.subscriptionBuilder();\n  }\n  defaultAdapter = new DefaultSubscriptionAdapter(options);\n  return defaultAdapter.subscriptionBuilder();\n}\n\nexport {\n  subscriptionOperation as subscription,\n  mutationOperation as mutation,\n  queryOperation as query,\n  adapters,\n};\n"]}